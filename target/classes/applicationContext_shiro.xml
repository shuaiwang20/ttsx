<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--realm-->
    <bean id="myRealm" class="com.qf.realm.Myrealm">
        <property name="userService" ref="userService"/>
        <property name="roleService" ref="roleService"/>
        <property name="permissionService" ref="permissionService"/>
        <!--密码解析匹配器-->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="SHA-256"/>
                <!-- true means hex encoded, false means base64 encoded -->
                <property name="storedCredentialsHexEncoded" value="false"/>
                <property name="hashIterations" value="10000"/>
            </bean>
        </property>
    </bean>
    <!--securityManager-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="sessionManager" ref="sessionManager"/>
<!--        <property name="cacheManager" ref="cachemanager"/>-->

    </bean>
    <!--shiroFilter-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- 记住我的Cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- rememberMe是cookie值中的key，value时用户名的密文
             cookie["rememberMe":"deleteMe"] 此cookie每次登陆后都会写出，用于清除之前的cookie
             cookie["rememberMe":username的密文] 此cookie也会在登录后写出，用于记录最新的username
            （ops: 如上设计，既能保证每次登陆后重新记录cookie，也能保证切换账号时，记录最新账号）
        -->
        <property name="name" value="rememberMe"/>
        <!-- cookie只在http请求中可用，那么通过js脚本将无法读取到cookie信息，有效防止cookie被窃取 -->
        <property name="httpOnly" value="true"/>
        <!-- cookie的生命周期，单位：秒 -->
        <property name="maxAge" value="102424"/><!-- 7天 -->
    </bean>

    <!--记住我管理器-->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <!--cacheManager  暂时用不上-->
<!--    <bean id="cachemanager" class="com.qf.cache.ShiroCacheManager">-->
<!--        <property name="redisTemplate" ref="redisTemplate"/>-->
<!--    </bean>-->

    <!--sessionManager-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO">
            <bean class="com.qf.session.MySessionDAO">
                <property name="template" ref="redisTemplate2"/>
            </bean>
        </property>
    </bean>
</beans>